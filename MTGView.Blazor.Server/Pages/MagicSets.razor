@page "/sets"
@inject SetInformationRepository SetInformation
<PageTitle>MTG Sets</PageTitle>
<CardDeck Flex="Flex.Row.Grow.Is1.JustifyContent.Between">
    @if (!_sets.Any())
    {
        <Span>
            <SpinKit Centered Type="SpinKitType.Chase" Color="#000" />
        </Span>   
    }
    <Repeater TItem="ScryfallSetDetails" Items="_sets">
        <Card
            Background="Background.Dark"
            TextColor="TextColor.Light"
            Margin="Margin.Is3.OnY.OnWidescreen.Is4.OnY.OnMobile"
            Padding="Padding.Is2.OnAll.OnWidescreen.Is3.OnAll.OnWidescreen"
            Border="Border.Is2.Rounded.Light.OnAll"
            Height="Height.Is100">
            <CardHeader Background="Background.Light" TextAlignment="TextAlignment.Center">
                <Image data-src="@context.IconUri" data-sizes="auto" Text="@context.Name" Class="lazyload" Style="height: 64px; width: 64px;"/>
            </CardHeader>
            <CardBody TextAlignment="TextAlignment.Center">
                <Paragraph>Set Name: @context.Name</Paragraph>
                @if (!String.IsNullOrWhiteSpace(context.Block))
                {
                    <Paragraph>Block: @context.Block Code: @context.BlockCode</Paragraph>
                }
                <Paragraph>Release Date: @context.ReleasedAt.ToString("d")</Paragraph>
                <Paragraph>Cards in Set: @context.CardsInSet</Paragraph>
            </CardBody>
        </Card>
    </Repeater>
</CardDeck>

@code 
{
    private List<ScryfallSetDetails> _sets = new(800);

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _sets = await SetInformation.GetAll();
            StateHasChanged();
        }
    }
}
