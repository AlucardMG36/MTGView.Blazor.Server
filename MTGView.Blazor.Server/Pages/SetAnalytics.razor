@page "/analysis"
<Jumbotron Background="Background.Dark"
           TextColor="TextColor.Light"
           Margin="Margin.Is2.OnY.OnWidescreen.Is4.OnY.OnMobile"
           Border="Border.Is2.Rounded.Light.OnAll"
           Shadow="Shadow.Default">
    <JumbotronTitle Size="JumbotronTitleSize.Is2">
        Select a set from the provided dropdown to view the basic analytics for that set
    </JumbotronTitle>
    <JumbotronSubtitle>
        Analytics can be filtered down per color, cost, and set.
    </JumbotronSubtitle>
</Jumbotron>
<Container Fluid
           Margin="Margin.Is3.OnAll.OnWidescreen.Is4.OnAll.OnMobile">
    <Row Margin="Margin.Is2.OnX.OnWidescreen.Is4.OnX.OnMobile">
        <Card Background="Background.Dark" Border="Border.Is2.Rounded.Light.OnAll">
            <CardBody>
                <Column ColumnSize="ColumnSize.IsHalf" Flex="Flex.Grow.Is1.Row.JustifyContent.Around">
                    <Autocomplete TItem="MagicSet"
                                  TValue="String"
                                  Data="@_magicSets"
                                  TextField="@(item => item.name)"
                                  ValueField="@(item => item.code)"
                                  SelectedValue="_selectedSetValue"
                                  SelectedValueChanged="OnSelectedValueChanged"
                                  @bind-SelectedText="selectedAutoCompleteText"
                                  Placeholder="Search for a Set to Analyze"
                                  Filter="AutocompleteFilter.StartsWith"
                                  FreeTyping
                                  CustomFilter="@((item, searchValue) => item.name.IndexOf(searchValue, 0, StringComparison.OrdinalIgnoreCase) >= 0)">
                        <NotFoundContent>
                            Sorry... @context was not found! :(
                        </NotFoundContent>
                        <ItemContent>
                            <Div Flex="Flex.InlineFlex.JustifyContent.Between" Width="Width.Is100">
                                <Heading Size="HeadingSize.Is3" Margin="Margin.Is2.FromBottom">@context.Value</Heading>
                                <Small>@context.Item.baseSetSize</Small>
                            </Div>
                            <Paragraph Margin="Margin.Is2.FromBottom">@context.Text</Paragraph>
                        </ItemContent>
                    </Autocomplete>
                </Column>
            </CardBody>
            <CardBody>
                <Column Flex="Flex.Grow.Is1.Row.JustifyContent.Between">
                    <Field Horizontal Background="Background.Dark" TextColor="TextColor.Light" Margin="Margin.Is1.OnY.OnWidescreen.Is3.OnY.OnDesktop">
                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                            <Paragraph Margin="Margin.Is2.OnX.OnWidescreen.Is3.OnX.OnMobile">
                                Set Code: @_selectedSetValue
                            </Paragraph>
                        </FieldBody>
                        <FieldBody ColumnSize="ColumnSize.IsHalf">
                            <Paragraph Margin="Margin.Is2.OnX.OnWidescreen.Is3.OnX.OnMobile">
                                Analyzing Set: @_magicSets?.FirstOrDefault(x => x.code.Equals(_selectedSetValue))?.name
                            </Paragraph>
                        </FieldBody>
                    </Field>
                </Column>
            </CardBody>
        </Card>
    </Row>
    @{
        var chosenSet = _magicSets?.FirstOrDefault(x => x.code.Equals(_selectedSetValue));
    }
    <Row Margin="Margin.Is2.OnY.OnWidescreen.Is4.OnY.OnMobile">
        <CardDeck Height="Height.Is100">
            <Column ColumnSize="ColumnSize.IsThird">
                <Card Background="Background.Dark" TextColor="TextColor.Light" Border="Border.Is2.Rounded.Light.OnAll" Shadow="Shadow.Default">
                    <CardHeader>
                        Color Distribution for @chosenSet?.name
                    </CardHeader>
                    <CardBody>
                        <BarChart @ref="@_barChart" TItem="ColorAnalyticsBySet" Options="@_barChartOptions" />
                    </CardBody>
                    <CardFooter>
                        <Paragraph>
                            Distributed across @chosenSet?.baseSetSize
                        </Paragraph>
                    </CardFooter>
                </Card>
            </Column>
            <Column ColumnSize="ColumnSize.IsThird">
                <Card Background="Background.Dark" TextColor="TextColor.Light" Border="Border.Is2.Rounded.Light.OnAll" Shadow="Shadow.Default"> 
                    <CardHeader>
                        Mana Costs for @chosenSet?.name
                    </CardHeader>
                    <CardBody>
                        <Chart @ref="@_pieChart"
                               TItem="int"
                               Options="@_pieChartOptions"
                               Type="ChartType.Pie" />
                    </CardBody>
                    <CardFooter>
                        Distributed across @chosenSet?.baseSetSize
                    </CardFooter>
                </Card>
            </Column>
            <Column ColumnSize="ColumnSize.IsThird">
                <Card Background="Background.Dark" TextColor="TextColor.Light" Border="Border.Is2.Rounded.Light.OnAll" Shadow="Shadow.Default">
                    <CardHeader>
                        Keyword effects for @chosenSet?.name
                    </CardHeader>
                    <CardBody>
                        <Chart @ref="@_doughnutChart"
                               TItem="int"
                               Options="@_doughnutChartOptions"
                               Type="ChartType.Doughnut" />
                    </CardBody>
                    <CardFooter>
                        Distributed across @chosenSet?.baseSetSize
                    </CardFooter>
                </Card>
            </Column>
        </CardDeck>
    </Row>
</Container>